/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.conversor.gui;

import com.conversor.logic.*;
import java.awt.event.ItemEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author JulioBC
 */
public class Screen extends javax.swing.JFrame {

    private int elementos;
    private float cantidad;
    private int de, a, tipoConversor;

    /**
     * Creates new form Screen
     */
    public Screen() {
        initComponents();
    }

    public static boolean validarDatos(String cantidad) {
        return cantidad.matches("[0.0000-9.0000000]{1,1000000}");
    }

    public String[] getTipoConversor(String datos) {

        if (this.conversor.getSelectedIndex() == 1) {
            elementos = 6;
        } else if (this.conversor.getSelectedIndex() == 2) {
            elementos = 3;
        } else if (this.conversor.getSelectedIndex() == 0) {
            elementos = 1;
        }
        String[] tipoConversor = new String[elementos];

        if (datos.equalsIgnoreCase("Conversor de Monedas")) {
            tipoConversor[0] = "MXN";
            tipoConversor[1] = "USD";
            tipoConversor[2] = "EUR";
            tipoConversor[3] = "GBP";
            tipoConversor[4] = "JPY";
            tipoConversor[5] = "KRW";

        }

        if (datos.equalsIgnoreCase("Conversor de Temperaturas")) {
            tipoConversor[0] = "Celcius";
            tipoConversor[1] = "Farenheit";
            tipoConversor[2] = "Kelvin";
        }

        if (datos.equalsIgnoreCase("Seleccionar")) {
            tipoConversor[0] = "Seleccionar";
        }
        return tipoConversor;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        conversor = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        combo2 = new javax.swing.JComboBox<>();
        combo3 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        btnConvertir = new javax.swing.JButton();
        txtConvertir = new javax.swing.JTextField();
        txtConvertido = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("JetBrains Mono NL", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Conversor de Unidades");

        conversor.setFont(new java.awt.Font("JetBrains Mono NL", 0, 14)); // NOI18N
        conversor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Conversor de Monedas", "Conversor de Temperaturas" }));
        conversor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                conversorItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("JetBrains Mono NL", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Seleccione el conversor que desea utilizar");

        combo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        combo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo2ActionPerformed(evt);
            }
        });

        combo3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        combo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo3ActionPerformed(evt);
            }
        });

        jLabel3.setText("De:");

        jLabel4.setText("A:");

        btnLimpiar.setFont(new java.awt.Font("JetBrains Mono NL", 1, 12)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnConvertir.setFont(new java.awt.Font("JetBrains Mono NL", 1, 12)); // NOI18N
        btnConvertir.setText("Convertir");
        btnConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertirActionPerformed(evt);
            }
        });

        txtConvertir.setFont(new java.awt.Font("JetBrains Mono NL", 0, 12)); // NOI18N

        txtConvertido.setFont(new java.awt.Font("JetBrains Mono NL", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtConvertir)
                    .addComponent(txtConvertido, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(btnConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(conversor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(conversor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConvertido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpiar)
                    .addComponent(btnConvertir))
                .addGap(100, 100, 100))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void conversorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_conversorItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (this.conversor.getSelectedIndex() >= 0) {
                this.combo2.setModel(new DefaultComboBoxModel(this.getTipoConversor(this.conversor.getSelectedItem().toString())));
                this.combo3.setModel(new DefaultComboBoxModel(this.getTipoConversor(this.conversor.getSelectedItem().toString())));
            }
        }
    }//GEN-LAST:event_conversorItemStateChanged

    private void combo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo2ActionPerformed
        //de = combo2.getSelectedItem().toString();
        //convertir();
    }//GEN-LAST:event_combo2ActionPerformed

    private void combo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo3ActionPerformed
        //a = combo3.getSelectedItem().toString();
        //convertir();
    }//GEN-LAST:event_combo3ActionPerformed

    private void btnConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertirActionPerformed

        tipoConversor = conversor.getSelectedIndex();
        ConversorMonedas conversorSeleccionado = new ConversorMonedas();

        txtConvertir.getText();

        if (!validarDatos(txtConvertir.getText().trim())) {
            JOptionPane.showMessageDialog(null, "No se aceptan letras o caracteres especiales");
        } else {

            switch (tipoConversor) {
                case 1 -> {
                    conversorSeleccionado = new ConversorMonedas();
                    cantidad = Float.parseFloat(txtConvertir.getText());
                    de = combo2.getSelectedIndex();
                    a = combo3.getSelectedIndex();
                }
                case 2 -> {
                    conversorSeleccionado = new ConversorTemperatura();
                    cantidad = Float.parseFloat(txtConvertir.getText());
                    de = combo2.getSelectedIndex();
                    a = combo3.getSelectedIndex();
                }
                default ->
                    JOptionPane.showMessageDialog(null, "Seleccione un conversor a utilizar");
            }

            conversorSeleccionado.setCantidad(cantidad);
            conversorSeleccionado.setDe(de);
            conversorSeleccionado.setA(a);
            conversorSeleccionado.convertir();

            switch (tipoConversor) {
                case 1, 2 -> {
                    txtConvertido.setText("" + conversorSeleccionado.convertir());
                }
                default ->
                    txtConvertido.setText("");
            }

        }
    }//GEN-LAST:event_btnConvertirActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        conversor.setSelectedIndex(0);
        combo2.setSelectedIndex(0);
        combo3.setSelectedIndex(0);
        txtConvertir.setText("");
        txtConvertido.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvertir;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> combo2;
    private javax.swing.JComboBox<String> combo3;
    private javax.swing.JComboBox<String> conversor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtConvertido;
    private javax.swing.JTextField txtConvertir;
    // End of variables declaration//GEN-END:variables
}
